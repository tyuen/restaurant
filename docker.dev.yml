version: "3.8"
services:
  sslproxy:
    image: nginx:stable-alpine
    ports:
      - 3001:3001
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/localhost.pem:/etc/nginx/cert/mycert.pem:ro
      - ./nginx/localhost-key.pem:/etc/nginx/cert/mycert-key.pem:ro

  frontend:
    image: node:21-alpine
    platform: linux/arm64
    environment:
      NODE_ENV: development
    working_dir: /home/node/app
    command: sh -c "npm run dev"
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/home/node/app
      - ./.env:/home/node/app/.env:ro

  backend:
    image: node:21-alpine
    platform: linux/arm64
    environment:
      NODE_ENV: development
      DB_HOST: ${DB_HOST}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    working_dir: /home/node/app
    command: sh -c "npm run dev"
    restart: unless-stopped
    ports:
      - 4000:4000
    volumes:
      - ./backend:/home/node/app
      - ./.env:/home/node/app/.env:ro
    depends_on:
      - db

  db:
    image: postgres:16
    volumes:
      - ./postgres:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  adminer:
    image: adminer
    restart: unless-stopped
    environment:
      - ADMINER_DEFAULT_SERVER=pgsql
    ports:
      - 8080:8080
